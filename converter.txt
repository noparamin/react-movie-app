<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8" />
    <title>Add React in One Minute</title>
  </head>
  <body>
    <div id="root"></div>
  </body>
    <!-- Load React. -->
    <!-- Note: when deploying, replace "development.js" with "production.min.js". -->
    <script src="https://unpkg.com/react@17/umd/react.development.js" crossorigin></script>
    <script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js" crossorigin></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
    <!-- Load our React component. -->
    <!-- <script src="like_button.js"></script> -->
    <script type="text/babel">
        function MinutesToHours() {
          const [amount, setAmount] = React.useState();
          const [inverted, setInverted] = React.useState(false);

          const onChange = (event) => {
              setAmount(event.target.value);
          };
          const reset = () => setAmount(0);
          const onInvert = () => {
            reset();
            setInverted((current) => !current); // 이전 상태를 가져와서 새로운 상태를 리턴하는 방법, 그냥 setFlipped(!flipped) 하는 것 X
          }
          return (
              <div>
                  <div>
                    <label htmlFor="minutes">Minutes</label>
                    <input value={inverted ? amount * 60 : amount} id="minutes" placeholder="Minutes" type="number" onChange={onChange} disabled={inverted} />
                  </div>
                  <div>
                    <label htmlFor="hours">Hours</label> 
                    <input value={inverted ? amount : Math.round(amount / 60)} id="hours" placeholder="Hours" type="number" onChange={onChange} disabled={!inverted} />
                  </div>
                  <button onClick={reset}>Reset</button>
                  <button onClick={onInvert}>{inverted ? "Turn back" : "Invert"}</button>
              </div>
          );
        }

        function KmToMiles() {
          const [distance, setDistance] = React.useState();
          const [inverted, setInverted] = React.useState(false);

          const onChange = (event) => {
            setDistance(event.target.value);
          };
          const reset = () => setDistance(0);
          const invert = () => {
            reset();
            setInverted((current) => !current);
          };

          return (
            <div>
              <div>
                <label>Kilometers</label>
                <input value={inverted ? distance * 1.609 : distance} placeholder="Kilometers" onChange={onChange} type="number" disabled={inverted} />
              </div>
              <div>
                <label>Miles</label>
                <input value={inverted ? distance : distance * 0.6214} placeholder="Miles" onChange={onChange} type="number" disabled={!inverted}/>
              </div>
              <div>
                <button onClick={reset}>Reset</button>
                <button onClick={invert}>Invert</button>
              </div>
            </div>

          );
        }

        function App() {
          const [index, setIndex] = React.useState("0");

          const onSelect = (event) => {
            setIndex(event.target.value);
          };
          
          return (
            <div>
              <h1>Super Converter</h1>
              <select value={index} onChange={onSelect}>
                <option value="0">Minutes & Hours</option>
                <option value="1">Km & Miles</option>
              </select>
              {index === "0" ? <MinutesToHours/> : null}
              {index === "1" ? <KmToMiles/> : null}
            </div>
          );
        }

        const root = document.getElementById("root");
        ReactDOM.render(<App/>, root);
    </script>


</html>